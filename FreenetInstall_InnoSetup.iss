; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Freenet"
#define MyAppVersion "0.7.5 build 1447"
#define MyAppPublisher "freenetproject.org"
#define MyAppURL "http://freenetproject.org/"
#define MyAppExeName "freenet.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{3196C62F-9C7B-4392-88B4-05C037D05518}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={localappdata}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputBaseFilename=FreenetInstaller_InnoSetup_1447
SetupIconFile=FreenetInstaller_InnoSetup.ico
SolidCompression=yes
PrivilegesRequired=lowest
WizardImageFile=Wizard_FreenetInstall.bmp
WizardSmallImageFile=blue_bunny_package.bmp
ExtraDiskSpaceRequired=682000000

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl,.\translations\Messages_fr.isl"

[Files]
Source: "install_bundle\jre-online-installer.exe"; DestDir: "{tmp}"; Flags: ignoreversion
Source: "install_node\bcprov-jdk15on-147.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenet-ext.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenet.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenet.ico"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenet.jar"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenetlauncher.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\freenetoffline.ico"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\README.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\seednodes.fref"; DestDir: "{app}"; Flags: ignoreversion
Source: "install_node\licenses\LICENSE.Freenet"; DestDir: "{app}\licenses"; Flags: ignoreversion
Source: "install_node\licenses\LICENSE.Mantissa"; DestDir: "{app}\licenses"; Flags: ignoreversion
Source: "install_node\plugins\JSTUN.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion
Source: "install_node\plugins\KeyUtils.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion
Source: "install_node\plugins\Library.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion
Source: "install_node\plugins\ThawIndexBrowser.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion
Source: "install_node\plugins\UPnP.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion
Source: "install_node\updater\sha1test.jar"; DestDir: "{app}\updater"; Flags: ignoreversion
Source: "install_node\updater\startssl.pem"; DestDir: "{app}\updater"; Flags: ignoreversion
Source: "install_node\updater\update.cmd"; DestDir: "{app}\updater"; Flags: ignoreversion
Source: "install_node\updater\wget.exe"; DestDir: "{app}\updater"; Flags: ignoreversion
Source: "install_node\wrapper\freenetwrapper-64.exe"; DestDir: "{app}\wrapper"; Flags: ignoreversion
Source: "install_node\wrapper\freenetwrapper.exe"; DestDir: "{app}\wrapper"; Flags: ignoreversion
Source: "install_node\wrapper\wrapper-windows-x86-32.dll"; DestDir: "{app}\wrapper"; Flags: ignoreversion
Source: "install_node\wrapper\wrapper-windows-x86-64.dll"; DestDir: "{app}\wrapper"; Flags: ignoreversion
Source: "install_node\wrapper\wrapper.conf"; DestDir: "{app}\wrapper"; Flags: ignoreversion
Source: "install_node\freenet.ini"; DestDir: "{app}"; Flags: ignoreversion; AfterInstall: DoAfterInstall
Source: "install_node\installid.dat"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"


[Run]
Filename: "{app}\{#MyAppExeName}"; Parameters: "/welcome"; Flags: nowait postinstall skipifsilent; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"

[UninstallDelete]
Type: files; Name: "{app}\*"; Tasks: quicklaunchicon desktopicon
Type: files; Name: "{app}\freenet.ini"

[ThirdParty]
UseRelativePaths=True

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[CustomMessages]
english.JavaMissingPageCaption=Freenet requirements
english.JavaMissingPageDescription=Java dependency
english.JavaMissingText=Freenet requires the Java Runtime Environment, but your system does not appear to have an up-to-date version installed. You can install Java by using the included online installer, which will download and install the necessary files from the Java website automatically
english.JavaMissingNextButton=Before continue, install Java !
english.ButtonInstallJava=Install Java
english.ErrorLaunchJavaInstaller=Error can't launch Java Installer

[Code]

var
  JavaMissingPage: TWizardPage;
  bIsJavaInstalled: boolean;
  ButtonInstallJava: TNewButton;
  TextJavaMissing: TNewStaticText;


function fCheckJavaInstall():boolean;
var
  JavaVersion : string;
begin
  if RegQueryStringValue(HKLM, 'SOFTWARE\JavaSoft\Java Runtime Environment', 'CurrentVersion', JavaVersion) = true then  begin
    if CompareStr(JavaVersion,'1.6') >= 0  then begin
      bIsJavaInstalled := True;
    end else begin
      bIsJavaInstalled := False;
    end;
  end else begin
    bIsJavaInstalled := False;
  end;
  Result := bIsJavaInstalled;
end;

procedure ButtonInstallJavaOnClick(Sender: TObject);
var
  ErrorCode : Integer;
begin
  ButtonInstallJava.Enabled := False;
  ExtractTemporaryFiles('{tmp}\jre-online-installer.exe');
  if not ShellExec('runas',ExpandConstant('{tmp}\jre-online-installer.exe'),'','',SW_SHOW,ewWaitUntilTerminated,ErrorCode) then begin
    MsgBox(CustomMessage('ErrorLaunchJavaInstaller'), mbError, MB_OK)
    ButtonInstallJava.Enabled := True;
  end else
    if fCheckJavaInstall() then WizardForm.NextButton.Enabled :=  True;
end;

function fJavaIsMissing():boolean;
begin
  TextJavaMissing.Caption :=  CustomMessage('JavaMissingText');
  ButtonInstallJava.Caption := CustomMessage('ButtonInstallJava');
end;


procedure DoAfterInstall();
begin
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'fproxy.port=8888' + #13#10 , True);
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'fcp.port=9481' + #13#10 , True);
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'pluginmanager.loadplugin=JSTUN;KeyUtils;ThawIndexBrowser;UPnP;Library' + #13#10 , True);
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'node.l10n=' + #13#10 , True);
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'node.updater.autoupdate=true' + #13#10 , True);
  SaveStringToFile(ExpandConstant('{app}\freenet.ini'), 'End' + #13#10 , True);
end;

procedure InitializeWizard;
begin
  bIsJavaInstalled := False;
  JavaMissingPage := CreateCustomPage(wpWelcome, CustomMessage('JavaMissingPageCaption'), CustomMessage('JavaMissingPageDescription'));

  TextJavaMissing := TNewStaticText.Create(JavaMissingPage);
  TextJavaMissing.Top := 10;
  TextJavaMissing.AutoSize := True;
  TextJavaMissing.WordWrap := True;
  TextJavaMissing.Parent := JavaMissingPage.Surface;
  //TextJavaMissing.Caption := ''
  TextJavaMissing.Width := ScaleX(400);

  ButtonInstallJava := TNewButton.Create(JavaMissingPage);
  ButtonInstallJava.Top := 60;
  ButtonInstallJava.Left := 150;
  ButtonInstallJava.Width := ScaleX(75);
  ButtonInstallJava.Height := ScaleY(23);
  //ButtonInstallJava.Caption := '';
  ButtonInstallJava.OnClick := @ButtonInstallJavaOnClick;
  ButtonInstallJava.Parent := JavaMissingPage.Surface;

  fCheckJavaInstall();
end;

procedure CurPageChanged(CurPageID: Integer);
begin
  if (CurPageID = JavaMissingPage.ID) then begin
    WizardForm.NextButton.Enabled := False;
    fJavaIsMissing();
  end;
    
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if (CurPageID = JavaMissingPage.ID) And (bIsJavaInstalled = False) then begin
    MsgBox(CustomMessage('JavaMissingNextButton'), mbInformation, MB_OK);
    Result := False;
  end else begin
    Result := True;
  end;
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  if (PageID = JavaMissingPage.ID) And (bIsJavaInstalled = True) then Result := True;
end;


